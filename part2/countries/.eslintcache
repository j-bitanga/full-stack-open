[{"C:\\Users\\jared\\Visual Studio Projects\\fullstackopen\\full-stack-open\\part2\\countries\\src\\App.js":"1","C:\\Users\\jared\\Visual Studio Projects\\fullstackopen\\full-stack-open\\part2\\countries\\src\\index.js":"2"},{"size":2328,"mtime":1608173533482,"results":"3","hashOfConfig":"4"},{"size":380,"mtime":1606597312281,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1f920i4",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jared\\Visual Studio Projects\\fullstackopen\\full-stack-open\\part2\\countries\\src\\App.js",["11"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\nconst App = () => {\n  const [countries, setCountries ] = useState([]) \n  const [filterName, setFilterName] = useState('')\n  const [showCountry, setShowCountry] = useState(false)\n\n  const hook = () => {\n    console.log('effect')\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then(response => {\n        console.log('promised fulfilled')\n        setCountries(response.data)\n      })\n    }\n\n  useEffect(hook, [])\n\n  const filteredNames = countries.filter(\n    country =>\n    country.name.toLocaleLowerCase().includes(filterName)\n  )\n\n  const namesToFilter = filterName ? filteredNames : countries\n\n  const handleClick = (e) => {\n    setShowCountry(!showCountry)\n    console.log(e.currentTarget.id)\n    const currentId = e.currentTarget.id\n  }\n  \n  return (\n    <div>\n    <h2>Search Countries</h2>\n    <form />\n    <div>\n      <input \n        value={filterName}\n        onChange={e => setFilterName(e.target.value.toLocaleLowerCase())} \n        />\n        <hr />\n        {!filteredNames.length && (\n          <div>No name matches that criteria</div>\n        )}\n\n        {filteredNames.length > 10 && filterName.length !== 0 && (\n          <div>Too many matches</div>\n        )}\n\n        {filteredNames.length === 1 &&\n        (namesToFilter.map(country => (\n          <div key={country.name}>\n            <h1>{country.name}</h1>\n            <p>capital {country.capital}</p>\n            <p>population {country.population}</p>\n            <h1>Languages</h1>\n            <ol>\n              {country.languages.map((language) => (\n                <div key={language.name}>\n                <li>{language.name}</li>\n                </div>\n              ))}\n            </ol>\n            \n            <img src={country.flag} alt=\"Flag\" height=\"150\" width=\"150\" />\n            </div>\n        )))}\n\n        {filterName.length !== 0 && filteredNames.length !== 1 &&\n        (namesToFilter.map(country => (\n          <div key={country.name}>\n            <p>{country.name}</p>\n            <button id={country.name} onClick={handleClick}>\n            {showCountry ? 'hide' : 'show'}\n            </button>\n            {showCountry ? <p>{country.capital}</p> : null  }\n            </div>\n        )))}\n    </div>\n    </div>\n  )\n}\n\nexport default App","C:\\Users\\jared\\Visual Studio Projects\\fullstackopen\\full-stack-open\\part2\\countries\\src\\index.js",[],{"ruleId":"12","severity":1,"message":"13","line":32,"column":11,"nodeType":"14","messageId":"15","endLine":32,"endColumn":20},"no-unused-vars","'currentId' is assigned a value but never used.","Identifier","unusedVar"]