{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jared\\\\Visual Studio Projects\\\\fullstackopen\\\\full-stack-open\\\\part1\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.click,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst Statistic = props => {\n  /*#__PURE__*/\n  _jsxDEV(\"p\", {\n    children: [props.text, props.value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Statistic;\n\nconst Statistics = props => {\n  const total = props.good + props.bad + props.neutral;\n\n  if (total === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        colspan: 2,\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Good\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 40\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Bad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colspan: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please leave feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      click: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      click: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      click: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistic\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/jared/Visual Studio Projects/fullstackopen/full-stack-open/part1/src/index.js"],"names":["React","useState","ReactDOM","Button","props","click","text","Statistic","value","Statistics","total","good","bad","neutral","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = (props) => (\n  <button onClick={props.click}>{props.text}</button>\n)\n\nconst Statistic = (props) => {\n  <p>{props.text}{props.value}</p>\n}\n\n \nconst Statistics = (props) => {\n  const total = props.good + props.bad + props.neutral\n  if (total === 0) {\n    return (\n      <h1>No feedback given</h1>\n    )\n  }\n    return (\n      \n      <tbody>\n      <tr>\n          <td colspan={2}>\n              <table>\n                  <tbody>\n                      <tr>\n                          <td>Good</td><br></br>\n                          <td>Bad</td>\n                      </tr>\n                      <tr>\n                          <td colspan={2}>\n                          \n                          </td>\n                      </tr>\n                  </tbody>\n              </table>\n          </td>\n      </tr>\n  </tbody>\n    )\n\n}\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n    <h1>Please leave feedback</h1>\n     <h2>Stats</h2>\n    <Button click={() => setGood(good + 1)} text='good'/>\n    <Button click={() => setNeutral(neutral + 1)} text='neutral'/>\n    <Button click={() => setBad (bad + 1)} text='bad'/>\n    <Statistics good={good} bad={bad} neutral={neutral}/>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}