{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jared\\\\Visual Studio Projects\\\\fullstackopen\\\\full-stack-open\\\\part1\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = ({\n  onClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: onClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst History = props => {\n  if (props.total === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = History;\n\nconst Statistics = props => {\n  const handleGood = () => {\n    props.setGood(props.good + 1);\n    props.setTotal(props.total + 1);\n    console.log(props.good);\n  };\n\n  const handleNeutral = () => {\n    props.setNeutral(props.neutral + 1);\n    props.setTotal(props.total + 1);\n    console.log(props.neutral);\n  };\n\n  const handleBad = () => {\n    props.setBad(props.bad + 1);\n    props.setTotal(props.total + 1);\n    console.log(props.bad);\n  };\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please leave feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(History, {\n      good: good,\n      setGood: setGood,\n      neutral: neutral,\n      setNeutral: setNeutral,\n      bad: bad,\n      setBad: setBad,\n      total: total,\n      setTotal: setTotal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"dRsTqApJtWIArC5jDJyGkRK1Szw=\");\n\n_c4 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"History\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/jared/Visual Studio Projects/fullstackopen/full-stack-open/part1/src/index.js"],"names":["React","useState","ReactDOM","Button","onClick","text","History","props","total","handleGood","handleNeutral","handleBad","Statistics","setGood","good","setTotal","console","log","setNeutral","neutral","setBad","bad","App","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = ({onClick, text}) => (\n  <button onClick={onClick}>\n    {text}\n  </button>\n)\n\nconst History = (props) => {\n  if (props.total === 0) {\n    return (\n      <h1>No feedback given</h1>\n    )\n  }\n\n  return(\n    <div>\n    <Button onClick={handleGood} text='good'/>\n     <Button onClick={handleNeutral} text='neutral'/>\n     <Button onClick={handleBad} text='bad'/>\n    </div>\n  )\n\n}\n\nconst Statistics = (props) => {\n  \n  const handleGood = () => {\n    props.setGood(props.good + 1)\n    props.setTotal(props.total + 1)\n    console.log(props.good)\n  }\n\n  const handleNeutral = () => {\n    props.setNeutral(props.neutral + 1)\n    props.setTotal(props.total + 1)\n    console.log(props.neutral)\n  }\n\n  const handleBad = () => {\n    props.setBad(props.bad + 1)\n    props.setTotal(props.total + 1)\n    console.log(props.bad)\n  }\n\n  \n\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [total, setTotal] = useState(0)\n  return (\n    <div>\n    <h1>Please leave feedback</h1>\n     <h2>Stats</h2>\n     <Statistics />\n     <History  good={good}setGood={setGood} neutral={neutral} setNeutral={setNeutral} bad={bad} setBad={setBad} total={total} setTotal={setTotal}/>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}